extends Node

@onready var tilemap = $TileMapLayer

var arr:Array
var cord:Vector2i
var room:Array

func _ready() -> void:
	arr = [["c0, 0)", "a1, 0)"], ["c1, 0)", "a1, 0)"], ["c2, 0)", "a1, 0)"], ["c3, 0)", "a1, 0)"], ["c4, 0)", "a1, 0)"], ["c5, 0)", "a1, 0)"], ["c6, 0)", "a1, 0)"], ["c7, 0)", "a1, 0)"], ["c0, 1)", "a1, 0)"], ["c1, 1)", "a0, 0)"], ["c2, 1)", "a0, 0)"], ["c3, 1)", "a0, 0)"], ["c4, 1)", "a0, 0)"], ["c5, 1)", "a0, 0)"], ["c6, 1)", "a0, 0)"], ["c7, 1)", "a1, 0)"], ["c0, 2)", "a1, 0)"], ["c1, 2)", "a0, 0)"], ["c2, 2)", "a1, 0)"], ["c3, 2)", "a0, 0)"], ["c4, 2)", "a0, 0)"], ["c5, 2)", "a1, 0)"], ["c6, 2)", "a0, 0)"], ["c7, 2)", "a1, 0)"], ["c0, 3)", "a1, 0)"], ["c1, 3)", "a0, 0)"], ["c2, 3)", "a0, 0)"], ["c3, 3)", "a0, 0)"], ["c4, 3)", "a0, 0)"], ["c5, 3)", "a0, 0)"], ["c6, 3)", "a0, 0)"], ["c7, 3)", "a1, 0)"], ["c0, 4)", "a1, 0)"], ["c1, 4)", "a0, 0)"], ["c2, 4)", "a1, 0)"], ["c3, 4)", "a0, 0)"], ["c4, 4)", "a0, 0)"], ["c5, 4)", "a1, 0)"], ["c6, 4)", "a0, 0)"], ["c7, 4)", "a1, 0)"], ["c0, 5)", "a1, 0)"], ["c1, 5)", "a0, 0)"], ["c2, 5)", "a0, 0)"], ["c3, 5)", "a1, 0)"], ["c4, 5)", "a1, 0)"], ["c5, 5)", "a0, 0)"], ["c6, 5)", "a0, 0)"], ["c7, 5)", "a1, 0)"], ["c0, 6)", "a1, 0)"], ["c1, 6)", "a0, 0)"], ["c2, 6)", "a0, 0)"], ["c3, 6)", "a0, 0)"], ["c4, 6)", "a0, 0)"], ["c5, 6)", "a0, 0)"], ["c6, 6)", "a0, 0)"], ["c7, 6)", "a1, 0)"], ["c0, 7)", "a1, 0)"], ["c1, 7)", "a1, 0)"], ["c2, 7)", "a1, 0)"], ["c3, 7)", "a1, 0)"], ["c4, 7)", "a1, 0)"], ["c5, 7)", "a1, 0)"], ["c6, 7)", "a1, 0)"], ["c7, 7)", "a1, 0)"]]
	for i in arr:
		for g in i:
			for e in g:
				if e == "c":
					cord = strToVector(g)
					break
				if e == "a":
					room.append([cord, strToVector(g)])
					break
	for i in room:
		tilemap.set_cell(i[0], 0, i[1])

	print(room)
func strToVector(string):
	var raw = (string.erase(0).erase(4).split(", "))
	return(Vector2i(int(raw[0]), int(raw[1])))
